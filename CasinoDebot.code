.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode casino
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode options
LDUQ 8
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 8
}
IFNOT
; Decode debotAbi
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode targetAbi
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode targetAddr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: casino
;; param: options
;; param: debotAbi
;; param: targetAbi
;; param: targetAddr
; constructor CasinoDebot
GETGLOB 2
NEQINT 0
THROWIFNOT 103
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
GETGLOB 2
;; ==
EQUAL
THROWIFNOT 102
ACCEPT
;; push identifier options
PUSH S3
;; push identifier debotAbi
PUSH S3
;; push identifier targetAbi
PUSH S3
;; push identifier targetAddr
PUSH S3
CALL $init_internal$
; expValue
; end expValue
;; push identifier casino
PUSH S4
; colValue
SETGLOB 15
; end colValue
BLKDROP 5
; end constructor CasinoDebot
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	setABI
.public	setABI
.type	setABI, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode dabi
LDREF
ENDS
;; param: dabi
; function setABI
GETGLOB 2
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
; end expValue
;; push identifier dabi
DUP
; colValue
SETGLOB 11
; end colValue
PUSHINT 1
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
UFITS 8
; colValue
SETGLOB 10
; end colValue
DROP
; end function setABI
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	setABI_internal
.type	setABI_internal, @function
;; param: dabi
; function setABI
GETGLOB 2
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
; end expValue
;; push identifier dabi
DUP
; colValue
SETGLOB 11
; end colValue
PUSHINT 1
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
UFITS 8
; colValue
SETGLOB 10
; end colValue
DROP
; end function setABI

.globl	setTargetABI
.public	setTargetABI
.type	setTargetABI, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode tabi
LDREF
ENDS
;; param: tabi
; function setTargetABI
GETGLOB 2
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
; end expValue
;; push identifier tabi
DUP
; colValue
SETGLOB 12
; end colValue
PUSHINT 2
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
UFITS 8
; colValue
SETGLOB 10
; end colValue
DROP
; end function setTargetABI
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	setTargetABI_internal
.type	setTargetABI_internal, @function
;; param: tabi
; function setTargetABI
GETGLOB 2
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
; end expValue
;; push identifier tabi
DUP
; colValue
SETGLOB 12
; end colValue
PUSHINT 2
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
UFITS 8
; colValue
SETGLOB 10
; end colValue
DROP
; end function setTargetABI

.globl	fetch
.public	fetch
.type	fetch, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function fetch
;; ret param: contexts
PUSHINT 0
NEWDICT
PAIR
; expValue
DUP
; end expValue
PUSHINT 0
NEWC
ENDC
PUSHINT 2
NEWDICT
PUSHSLICE x48656c6c6f2c20706c6561736520656e74657220796f7572206164647265737320666f7220706c617920696e20434153494e4f2e
NEWC
STSLICE
ENDC
PUSHSLICE x656e74657253746f7261676541646472657373
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x71756974
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
NIP
; end colValue
NULL
;; decl: fargs
NULL
;; decl: fargs2
NULL
;; decl: fargs3
; expValue
; end expValue
PUSHSLICE x7061727365436173696e6f41646472657373
NEWC
STSLICE
ENDC
; colValue
POP S3
; end colValue
; expValue
; end expValue
PUSHSLICE x67657456616c496e6e6572
NEWC
STSLICE
ENDC
; colValue
POP S2
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 1
PUSHSLICE x426574206d656e753a
NEWC
STSLICE
ENDC
PUSHINT 12
NEWDICT
NEWC
ENDC
PUSHSLICE x4164647265737320436173696e6f3a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs
PUSH S10
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs2
PUSH S9
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x53696e676c65202d20626574206f6e207468652073696e676c65206e756d6265722066726f6d203020746f203336
NEWC
STSLICE
ENDC
PUSHINT 22
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x446f7a656e202d20626574206f6e2074686520646f7a656e206f66206e756d626572733a2066726f6d203120746f2031322c2031332d2e2e2e2d32342c2032352d2e2e2e2d3336
NEWC
STSLICE
ENDC
PUSHINT 25
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 4
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x436f6c756d6e202d20626574206f6e2074686520636f6c756d6e206f66206e756d626572733a20312d342d2e2e2e2d33342c20322d352d2e2e2e2d33352c20332d362d2e2e2e2d3336
NEWC
STSLICE
ENDC
PUSHINT 28
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 5
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x47726561742f536d616c6c202d20626574206f6e20726967687465656e206e756d626572733a2066726f6d203120746f203138206f722066726f6d20313920746f203336
NEWC
STSLICE
ENDC
PUSHINT 34
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 6
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x4576656e2f4f6464202d20626574206f6e20616c6c206576656e206f72206f6464206e756d62657273
NEWC
STSLICE
ENDC
PUSHINT 37
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 7
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x5265642f426c61636b202d20626574206f6e20616c6c20726564206f7220626c61636b206e756d62657273
NEWC
STSLICE
ENDC
PUSHINT 31
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 8
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 9
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x436865636b206c61737420726573756c74
NEWC
STSLICE
ENDC
PUSHINT 50
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 10
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x71756974
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 11
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 22
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 23
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 23
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x53696e676c652120456e7465722073696e676c65206e756d6265722066726f6d203020746f203336
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d42657453696e676c65
NEWC
STSLICE
ENDC
PUSHINT 24
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 24
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d736742657453696e676c65
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 22
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 25
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 26
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 26
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x446f7a656e2120456e74657220646f7a656e206f66206e756d626572733a2066726f6d203120746f2031322c2031332d2e2e2e2d32342c2032352d2e2e2e2d3336205b65786d3a312c322c335d
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d426574446f7a656e
NEWC
STSLICE
ENDC
PUSHINT 27
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 27
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d7367426574446f7a656e
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 25
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 28
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 29
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 29
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x436f6c756d6e2120456e74657220636f6c756d6e206f66206e756d626572733a2066726f6d203120746f2031322c2031332d2e2e2e2d32342c2032352d2e2e2e2d3336205b65786d3a312c322c335d
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d426574436f6c756d6e
NEWC
STSLICE
ENDC
PUSHINT 30
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 30
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d7367426574436f6c756d6e
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 28
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 34
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 35
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 35
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x47726561742f536d616c6c2120456e74657220726967687465656e206e756d626572733a2066726f6d203120746f203138205b536d616c6c3a305d206f722066726f6d20313920746f2033362e5b47726561743a315d
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d4265744753
NEWC
STSLICE
ENDC
PUSHINT 36
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 36
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d73674265744772656174536d616c6c
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 34
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 37
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 38
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 38
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x4576656e2f4f646421204576656e206f72206f6464206e756d626572732e205b6576656e203d20313b206f6464203d20305d
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d426574504152495459
NEWC
STSLICE
ENDC
PUSHINT 39
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 39
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d7367426574506172697479
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 37
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 31
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 32
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 32
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x434f4c4f522120526564206f7220626c61636b206e756d62657273205b5265643a313b20626c61636b3a305d
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d426574434f4c4f52
NEWC
STSLICE
ENDC
PUSHINT 33
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 33
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d7367426574436f6c6f72
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 31
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 50
PUSHSLICE x45786974206f72206e6f743f
NEWC
STSLICE
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
;; returning named params
BLKDROP 3
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa5b934ca
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
; end function fetch
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	fetch_internal
.type	fetch_internal, @function
; modifier accept
ACCEPT
; function fetch
;; ret param: contexts
PUSHINT 0
NEWDICT
PAIR
; expValue
DUP
; end expValue
PUSHINT 0
NEWC
ENDC
PUSHINT 2
NEWDICT
PUSHSLICE x48656c6c6f2c20706c6561736520656e74657220796f7572206164647265737320666f7220706c617920696e20434153494e4f2e
NEWC
STSLICE
ENDC
PUSHSLICE x656e74657253746f7261676541646472657373
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x71756974
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
NIP
; end colValue
NULL
;; decl: fargs
NULL
;; decl: fargs2
NULL
;; decl: fargs3
; expValue
; end expValue
PUSHSLICE x7061727365436173696e6f41646472657373
NEWC
STSLICE
ENDC
; colValue
POP S3
; end colValue
; expValue
; end expValue
PUSHSLICE x67657456616c496e6e6572
NEWC
STSLICE
ENDC
; colValue
POP S2
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 1
PUSHSLICE x426574206d656e753a
NEWC
STSLICE
ENDC
PUSHINT 12
NEWDICT
NEWC
ENDC
PUSHSLICE x4164647265737320436173696e6f3a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs
PUSH S10
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs2
PUSH S9
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x53696e676c65202d20626574206f6e207468652073696e676c65206e756d6265722066726f6d203020746f203336
NEWC
STSLICE
ENDC
PUSHINT 22
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x446f7a656e202d20626574206f6e2074686520646f7a656e206f66206e756d626572733a2066726f6d203120746f2031322c2031332d2e2e2e2d32342c2032352d2e2e2e2d3336
NEWC
STSLICE
ENDC
PUSHINT 25
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 4
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x436f6c756d6e202d20626574206f6e2074686520636f6c756d6e206f66206e756d626572733a20312d342d2e2e2e2d33342c20322d352d2e2e2e2d33352c20332d362d2e2e2e2d3336
NEWC
STSLICE
ENDC
PUSHINT 28
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 5
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x47726561742f536d616c6c202d20626574206f6e20726967687465656e206e756d626572733a2066726f6d203120746f203138206f722066726f6d20313920746f203336
NEWC
STSLICE
ENDC
PUSHINT 34
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 6
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x4576656e2f4f6464202d20626574206f6e20616c6c206576656e206f72206f6464206e756d62657273
NEWC
STSLICE
ENDC
PUSHINT 37
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 7
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x5265642f426c61636b202d20626574206f6e20616c6c20726564206f7220626c61636b206e756d62657273
NEWC
STSLICE
ENDC
PUSHINT 31
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 8
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 9
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x436865636b206c61737420726573756c74
NEWC
STSLICE
ENDC
PUSHINT 50
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 10
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x71756974
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 11
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 22
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 23
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 23
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x53696e676c652120456e7465722073696e676c65206e756d6265722066726f6d203020746f203336
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d42657453696e676c65
NEWC
STSLICE
ENDC
PUSHINT 24
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 24
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d736742657453696e676c65
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 22
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 25
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 26
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 26
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x446f7a656e2120456e74657220646f7a656e206f66206e756d626572733a2066726f6d203120746f2031322c2031332d2e2e2e2d32342c2032352d2e2e2e2d3336205b65786d3a312c322c335d
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d426574446f7a656e
NEWC
STSLICE
ENDC
PUSHINT 27
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 27
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d7367426574446f7a656e
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 25
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 28
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 29
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 29
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x436f6c756d6e2120456e74657220636f6c756d6e206f66206e756d626572733a2066726f6d203120746f2031322c2031332d2e2e2e2d32342c2032352d2e2e2e2d3336205b65786d3a312c322c335d
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d426574436f6c756d6e
NEWC
STSLICE
ENDC
PUSHINT 30
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 30
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d7367426574436f6c756d6e
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 28
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 34
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 35
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 35
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x47726561742f536d616c6c2120456e74657220726967687465656e206e756d626572733a2066726f6d203120746f203138205b536d616c6c3a305d206f722066726f6d20313920746f2033362e5b47726561743a315d
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d4265744753
NEWC
STSLICE
ENDC
PUSHINT 36
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 36
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d73674265744772656174536d616c6c
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 34
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 37
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 38
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 38
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x4576656e2f4f646421204576656e206f72206f6464206e756d626572732e205b6576656e203d20313b206f6464203d20305d
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d426574504152495459
NEWC
STSLICE
ENDC
PUSHINT 39
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 39
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d7367426574506172697479
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 37
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHSLICE x7061727365526573426f6479
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 31
NEWC
ENDC
PUSHINT 4
NEWDICT
NEWC
ENDC
PUSHSLICE x436f64653a207b7d0a436f6d6d656e743a207b7d
NEWC
STSLICE
ENDC
TRUE
;; push identifier fargs3
PUSH S8
PUSHINT 253
;; param: desc
;; param: text
;; param: instant
;; param: fargs
;; param: to
; function ActionPrintEx
;; push identifier desc
PUSH S4
;; push identifier text
PUSH S4
;; push identifier to
PUSH S2
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
;; decl: act
;; if
;; push identifier instant
PUSH S3
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; get member attrs
	;; push identifier act
	PUSH S1
	INDEX 3
	CTOS
	PUSHSLICE x2c696e7374616e74
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier fargs
PUSH S2
ISNULL
PUSHCONT {
	;; get member attrs
	;; push identifier act
	DUP
	INDEX 3
	CTOS
	PUSHSLICE x2c66617267733d
	NEWC
	STSLICE
	ENDC
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	CTOS
	;; push identifier fargs
	PUSH S3
	DUP
	ISNULL
	THROWIF 63
	CTOS
	SWAP
	NEWC
	STSLICE
	STSLICE
	ENDC
	; expValue
	PUSH S1
	; end expValue
	SWAP
	; colValue
	SETINDEX 3
	NIP
	; end colValue
}
IFNOT
;; end if
;; return
XCHG s5
BLKDROP 5
; end function ActionPrintEx
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x456e746572206265742076616c7565
NEWC
STSLICE
ENDC
PUSHSLICE x656e746572426574
NEWC
STSLICE
ENDC
PUSHINT 32
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 32
NEWC
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x434f4c4f522120526564206f7220626c61636b206e756d62657273205b5265643a313b20626c61636b3a305d
NEWC
STSLICE
ENDC
PUSHSLICE x656e7465724e756d426574434f4c4f52
NEWC
STSLICE
ENDC
PUSHINT 33
;; param: desc
;; param: name
;; param: to
; function ActionRun
;; return
;; push identifier desc
PUSH S2
;; push identifier name
PUSH S2
PUSHINT 1
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionRun
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f20626574206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 33
PUSHSLICE x41726520796f7520737572653f
NEWC
STSLICE
ENDC
PUSHINT 4
NEWDICT
PUSHSLICE x596573
NEWC
STSLICE
ENDC
PUSHSLICE x73656e645375626d69744d7367426574436f6c6f72
NEWC
STSLICE
ENDC
PUSHSLICE x7369676e3d62795f75736572
NEWC
STSLICE
ENDC
PUSHINT 31
;; param: desc
;; param: name
;; param: attrs
;; param: to
; function ActionSendMsg
;; return
;; push identifier desc
PUSH S3
;; push identifier name
PUSH S3
PUSHINT 3
;; push identifier attrs
PUSH S4
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s4
BLKDROP 4
; end function ActionSendMsg
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
; expValue
PUSH S3
; end expValue
PUSHINT 50
PUSHSLICE x45786974206f72206e6f743f
NEWC
STSLICE
ENDC
PUSHINT 3
NEWDICT
PUSHSLICE x52657475726e20746f206d61696e206d656e75
NEWC
STSLICE
ENDC
PUSHINT 1
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x52657475726e20746f207365742061646472657373
NEWC
STSLICE
ENDC
PUSHINT 0
;; param: desc
;; param: to
; function ActionGoto
;; return
;; push identifier desc
PUSH S1
NEWC
ENDC
PUSHINT 6
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
NIP
NIP
; end function ActionGoto
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHSLICE x51756974
NEWC
STSLICE
ENDC
PUSHSLICE x42796521
NEWC
STSLICE
ENDC
PUSHINT 255
;; param: desc
;; param: text
;; param: to
; function ActionPrint
;; return
;; push identifier desc
PUSH S2
;; push identifier text
PUSH S2
PUSHINT 5
NEWC
ENDC
;; push identifier to
PUSH S4
;; push identifier empty
GETGLOB 14
TUPLE 6
XCHG s3
BLKDROP 3
; end function ActionPrint
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 8
PUSH S3
STREFR
PUSH S2
STUR 8
PUSH S1
STREFR
XCHG s6
BLKDROP 6
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
TUPLE 3
;; array.push(..)
UNTUPLE 3
NEWC
PUSH S3
STUR 8
PUSH S2
STREFR
PUSH S1
UNPAIR
ROTREV
STUR 32
STDICT
XCHG s3
BLKDROP 3
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S4
; end colValue
;; returning named params
BLKDROP 3
TUPLE 1
SETGLOB 8
; end function fetch
; end modifier accept
GETGLOB 8
UNTUPLE 1

.globl	enterStorageAddress
.public	enterStorageAddress
.type	enterStorageAddress, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode addr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: addr
; modifier accept
ACCEPT
; function enterStorageAddress
; expValue
; end expValue
;; push identifier addr
DUP
; colValue
SETGLOB 13
; end colValue
PUSHINT 4
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
UFITS 8
; colValue
SETGLOB 10
; end colValue
; end function enterStorageAddress
DROP
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	enterStorageAddress_internal
.type	enterStorageAddress_internal, @function
;; param: addr
; modifier accept
ACCEPT
; function enterStorageAddress
; expValue
; end expValue
;; push identifier addr
DUP
; colValue
SETGLOB 13
; end colValue
PUSHINT 4
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
UFITS 8
; colValue
SETGLOB 10
; end colValue
; end function enterStorageAddress
DROP
; end modifier accept

.globl	setCasino
.public	setCasino
.type	setCasino, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode casino
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: casino
; modifier accept
ACCEPT
; function setCasino
; expValue
; end expValue
;; push identifier casino
DUP
; colValue
SETGLOB 15
; end colValue
; end function setCasino
DROP
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	setCasino_internal
.type	setCasino_internal, @function
;; param: casino
; modifier accept
ACCEPT
; function setCasino
; expValue
; end expValue
;; push identifier casino
DUP
; colValue
SETGLOB 15
; end colValue
; end function setCasino
DROP
; end modifier accept

.globl	getValInner
.public	getValInner
.type	getValInner, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function getValInner
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x2d164363
STSLICECONST x5ae7b83e
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x81cbe4d1
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
; end function getValInner
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getValInner_internal
.type	getValInner_internal, @function
; modifier accept
ACCEPT
; function getValInner
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x2d164363
STSLICECONST x5ae7b83e
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
TUPLE 2
SETGLOB 8
; end function getValInner
; end modifier accept
GETGLOB 8
UNTUPLE 2

.globl	res_body
.public	res_body
.type	res_body, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode code
LDU 8
; Decode comment
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: code
;; param: comment
; function res_body
; expValue
; end expValue
;; push identifier code
PUSH S1
; colValue
SETGLOB 16
; end colValue
; expValue
; end expValue
;; push identifier comment
DUP
; colValue
SETGLOB 17
; end colValue
DROP2
; end function res_body
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	res_body_internal
.type	res_body_internal, @function
;; param: code
;; param: comment
; function res_body
; expValue
; end expValue
;; push identifier code
PUSH S1
; colValue
SETGLOB 16
; end colValue
; expValue
; end expValue
;; push identifier comment
DUP
; colValue
SETGLOB 17
; end colValue
DROP2
; end function res_body

.globl	enterNumBetSingle
.public	enterNumBetSingle
.type	enterNumBetSingle, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode number
LDU 8
ENDS
;; param: number
; modifier accept
ACCEPT
; function enterNumBetSingle
; expValue
; end expValue
;; push identifier number
DUP
; colValue
SETGLOB 18
; end colValue
; end function enterNumBetSingle
DROP
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	enterNumBetSingle_internal
.type	enterNumBetSingle_internal, @function
;; param: number
; modifier accept
ACCEPT
; function enterNumBetSingle
; expValue
; end expValue
;; push identifier number
DUP
; colValue
SETGLOB 18
; end colValue
; end function enterNumBetSingle
DROP
; end modifier accept

.globl	enterNumBetDozen
.public	enterNumBetDozen
.type	enterNumBetDozen, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode number
LDU 8
ENDS
;; param: number
; modifier accept
ACCEPT
; function enterNumBetDozen
; expValue
; end expValue
;; push identifier number
DUP
; colValue
SETGLOB 19
; end colValue
; end function enterNumBetDozen
DROP
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	enterNumBetDozen_internal
.type	enterNumBetDozen_internal, @function
;; param: number
; modifier accept
ACCEPT
; function enterNumBetDozen
; expValue
; end expValue
;; push identifier number
DUP
; colValue
SETGLOB 19
; end colValue
; end function enterNumBetDozen
DROP
; end modifier accept

.globl	enterNumBetColumn
.public	enterNumBetColumn
.type	enterNumBetColumn, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode number
LDU 8
ENDS
;; param: number
; modifier accept
ACCEPT
; function enterNumBetColumn
; expValue
; end expValue
;; push identifier number
DUP
; colValue
SETGLOB 20
; end colValue
; end function enterNumBetColumn
DROP
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	enterNumBetColumn_internal
.type	enterNumBetColumn_internal, @function
;; param: number
; modifier accept
ACCEPT
; function enterNumBetColumn
; expValue
; end expValue
;; push identifier number
DUP
; colValue
SETGLOB 20
; end colValue
; end function enterNumBetColumn
DROP
; end modifier accept

.globl	enterNumBetGS
.public	enterNumBetGS
.type	enterNumBetGS, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode isGreat
LDU 8
ENDS
;; param: isGreat
; modifier accept
ACCEPT
; function enterNumBetGS
; expValue
; end expValue
;; push identifier isGreat
DUP
; colValue
SETGLOB 22
; end colValue
; end function enterNumBetGS
DROP
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	enterNumBetGS_internal
.type	enterNumBetGS_internal, @function
;; param: isGreat
; modifier accept
ACCEPT
; function enterNumBetGS
; expValue
; end expValue
;; push identifier isGreat
DUP
; colValue
SETGLOB 22
; end colValue
; end function enterNumBetGS
DROP
; end modifier accept

.globl	enterNumBetPARITY
.public	enterNumBetPARITY
.type	enterNumBetPARITY, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode isEven
LDU 8
ENDS
;; param: isEven
; modifier accept
ACCEPT
; function enterNumBetPARITY
; expValue
; end expValue
;; push identifier isEven
DUP
; colValue
SETGLOB 23
; end colValue
; end function enterNumBetPARITY
DROP
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	enterNumBetPARITY_internal
.type	enterNumBetPARITY_internal, @function
;; param: isEven
; modifier accept
ACCEPT
; function enterNumBetPARITY
; expValue
; end expValue
;; push identifier isEven
DUP
; colValue
SETGLOB 23
; end colValue
; end function enterNumBetPARITY
DROP
; end modifier accept

.globl	enterNumBetCOLOR
.public	enterNumBetCOLOR
.type	enterNumBetCOLOR, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode isRed
LDU 8
ENDS
;; param: isRed
; modifier accept
ACCEPT
; function enterNumBetCOLOR
; expValue
; end expValue
;; push identifier isRed
DUP
; colValue
SETGLOB 21
; end colValue
; end function enterNumBetCOLOR
DROP
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	enterNumBetCOLOR_internal
.type	enterNumBetCOLOR_internal, @function
;; param: isRed
; modifier accept
ACCEPT
; function enterNumBetCOLOR
; expValue
; end expValue
;; push identifier isRed
DUP
; colValue
SETGLOB 21
; end colValue
; end function enterNumBetCOLOR
DROP
; end modifier accept

.globl	parseNumBetSingle
.public	parseNumBetSingle
.type	parseNumBetSingle, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function parseNumBetSingle
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetSing
GETGLOB 18
; colValue
NIP
; end colValue
;; returning named params
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xf98465cf
	PUSH S1
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STUR 8
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
; end function parseNumBetSingle
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	parseNumBetSingle_internal
.type	parseNumBetSingle_internal, @function
; modifier accept
ACCEPT
; function parseNumBetSingle
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetSing
GETGLOB 18
; colValue
NIP
; end colValue
;; returning named params
TUPLE 1
SETGLOB 8
; end function parseNumBetSingle
; end modifier accept
GETGLOB 8
UNTUPLE 1

.globl	parseNumBetDozen
.public	parseNumBetDozen
.type	parseNumBetDozen, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function parseNumBetDozen
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetDozen
GETGLOB 19
; colValue
NIP
; end colValue
;; returning named params
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xc0c55651
	PUSH S1
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STUR 8
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
; end function parseNumBetDozen
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	parseNumBetDozen_internal
.type	parseNumBetDozen_internal, @function
; modifier accept
ACCEPT
; function parseNumBetDozen
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetDozen
GETGLOB 19
; colValue
NIP
; end colValue
;; returning named params
TUPLE 1
SETGLOB 8
; end function parseNumBetDozen
; end modifier accept
GETGLOB 8
UNTUPLE 1

.globl	parseNumBetColumn
.public	parseNumBetColumn
.type	parseNumBetColumn, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function parseNumBetColumn
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetColumn
GETGLOB 20
; colValue
NIP
; end colValue
;; returning named params
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xcd8db2c6
	PUSH S1
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STUR 8
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
; end function parseNumBetColumn
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	parseNumBetColumn_internal
.type	parseNumBetColumn_internal, @function
; modifier accept
ACCEPT
; function parseNumBetColumn
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetColumn
GETGLOB 20
; colValue
NIP
; end colValue
;; returning named params
TUPLE 1
SETGLOB 8
; end function parseNumBetColumn
; end modifier accept
GETGLOB 8
UNTUPLE 1

.globl	parseNumBetGS
.public	parseNumBetGS
.type	parseNumBetGS, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function parseNumBetGS
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetGS
GETGLOB 22
; colValue
NIP
; end colValue
;; returning named params
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xfdcada01
	PUSH S1
	STUR 184
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STUR 184
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
; end function parseNumBetGS
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	parseNumBetGS_internal
.type	parseNumBetGS_internal, @function
; modifier accept
ACCEPT
; function parseNumBetGS
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetGS
GETGLOB 22
; colValue
NIP
; end colValue
;; returning named params
TUPLE 1
SETGLOB 8
; end function parseNumBetGS
; end modifier accept
GETGLOB 8
UNTUPLE 1

.globl	parseNumBetParity
.public	parseNumBetParity
.type	parseNumBetParity, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function parseNumBetParity
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetParity
GETGLOB 23
; colValue
NIP
; end colValue
;; returning named params
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xcf5e516a
	PUSH S1
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STUR 8
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
; end function parseNumBetParity
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	parseNumBetParity_internal
.type	parseNumBetParity_internal, @function
; modifier accept
ACCEPT
; function parseNumBetParity
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetParity
GETGLOB 23
; colValue
NIP
; end colValue
;; returning named params
TUPLE 1
SETGLOB 8
; end function parseNumBetParity
; end modifier accept
GETGLOB 8
UNTUPLE 1

.globl	parseNumBetColor
.public	parseNumBetColor
.type	parseNumBetColor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function parseNumBetColor
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetColor
GETGLOB 21
; colValue
NIP
; end colValue
;; returning named params
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa728ca28
	PUSH S1
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STUR 8
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
; end function parseNumBetColor
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	parseNumBetColor_internal
.type	parseNumBetColor_internal, @function
; modifier accept
ACCEPT
; function parseNumBetColor
;; ret param: number0
PUSHINT 0
; expValue
; end expValue
;; push identifier m_numberBetColor
GETGLOB 21
; colValue
NIP
; end colValue
;; returning named params
TUPLE 1
SETGLOB 8
; end function parseNumBetColor
; end modifier accept
GETGLOB 8
UNTUPLE 1

.globl	parseCasinoAddress
.public	parseCasinoAddress
.type	parseCasinoAddress, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function parseCasinoAddress
;; ret param: param0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
;; push identifier m_casino
GETGLOB 15
; colValue
NIP
; end colValue
;; returning named params
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xd46b7f14
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STSLICER
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
; end function parseCasinoAddress
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	parseCasinoAddress_internal
.type	parseCasinoAddress_internal, @function
; modifier accept
ACCEPT
; function parseCasinoAddress
;; ret param: param0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
;; push identifier m_casino
GETGLOB 15
; colValue
NIP
; end colValue
;; returning named params
TUPLE 1
SETGLOB 8
; end function parseCasinoAddress
; end modifier accept
GETGLOB 8
UNTUPLE 1

.globl	parseResBody
.public	parseResBody
.type	parseResBody, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function parseResBody
;; ret param: param0
PUSHINT 0
;; ret param: param1
PUSHINT 0
; expValue
; end expValue
;; push identifier m_lastCode
GETGLOB 16
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; push identifier m_lastComment
GETGLOB 17
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xe095509b
	PUSH S2
	STUR 8
	PUSH S1
	STUR 128
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STUR 8
	PUSH S1
	STUR 128
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
; end function parseResBody
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	parseResBody_internal
.type	parseResBody_internal, @function
; modifier accept
ACCEPT
; function parseResBody
;; ret param: param0
PUSHINT 0
;; ret param: param1
PUSHINT 0
; expValue
; end expValue
;; push identifier m_lastCode
GETGLOB 16
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; push identifier m_lastComment
GETGLOB 17
; colValue
NIP
; end colValue
;; returning named params
TUPLE 2
SETGLOB 8
; end function parseResBody
; end modifier accept
GETGLOB 8
UNTUPLE 2

.globl	sendSubmitMsgBetSingle
.public	sendSubmitMsgBetSingle
.type	sendSubmitMsgBetSingle, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function sendSubmitMsgBetSingle
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x62a5e79a
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; number
;; push identifier m_numberBetSing
GETGLOB 18
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xdfc79943
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
; end function sendSubmitMsgBetSingle
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	sendSubmitMsgBetSingle_internal
.type	sendSubmitMsgBetSingle_internal, @function
; modifier accept
ACCEPT
; function sendSubmitMsgBetSingle
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x62a5e79a
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; number
;; push identifier m_numberBetSing
GETGLOB 18
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
TUPLE 2
SETGLOB 8
; end function sendSubmitMsgBetSingle
; end modifier accept
GETGLOB 8
UNTUPLE 2

.globl	sendSubmitMsgBetDozen
.public	sendSubmitMsgBetDozen
.type	sendSubmitMsgBetDozen, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function sendSubmitMsgBetDozen
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x0792c249
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; number
;; push identifier m_numberBetDozen
GETGLOB 19
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xba3df12c
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
; end function sendSubmitMsgBetDozen
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	sendSubmitMsgBetDozen_internal
.type	sendSubmitMsgBetDozen_internal, @function
; modifier accept
ACCEPT
; function sendSubmitMsgBetDozen
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x0792c249
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; number
;; push identifier m_numberBetDozen
GETGLOB 19
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
TUPLE 2
SETGLOB 8
; end function sendSubmitMsgBetDozen
; end modifier accept
GETGLOB 8
UNTUPLE 2

.globl	sendSubmitMsgBetColumn
.public	sendSubmitMsgBetColumn
.type	sendSubmitMsgBetColumn, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function sendSubmitMsgBetColumn
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x46057cdb
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; number
;; push identifier m_numberBetDozen
GETGLOB 19
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xcec8bcc9
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
; end function sendSubmitMsgBetColumn
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	sendSubmitMsgBetColumn_internal
.type	sendSubmitMsgBetColumn_internal, @function
; modifier accept
ACCEPT
; function sendSubmitMsgBetColumn
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x46057cdb
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; number
;; push identifier m_numberBetDozen
GETGLOB 19
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
TUPLE 2
SETGLOB 8
; end function sendSubmitMsgBetColumn
; end modifier accept
GETGLOB 8
UNTUPLE 2

.globl	sendSubmitMsgBetGreatSmall
.public	sendSubmitMsgBetGreatSmall
.type	sendSubmitMsgBetGreatSmall, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function sendSubmitMsgBetGreatSmall
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x2f47119b
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; isGreat
;; push identifier m_numberBetGS
GETGLOB 22
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xfd55f536
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
; end function sendSubmitMsgBetGreatSmall
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	sendSubmitMsgBetGreatSmall_internal
.type	sendSubmitMsgBetGreatSmall_internal, @function
; modifier accept
ACCEPT
; function sendSubmitMsgBetGreatSmall
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x2f47119b
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; isGreat
;; push identifier m_numberBetGS
GETGLOB 22
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
TUPLE 2
SETGLOB 8
; end function sendSubmitMsgBetGreatSmall
; end modifier accept
GETGLOB 8
UNTUPLE 2

.globl	sendSubmitMsgBetParity
.public	sendSubmitMsgBetParity
.type	sendSubmitMsgBetParity, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function sendSubmitMsgBetParity
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x557301e9
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; isEven
;; push identifier m_numberBetParity
GETGLOB 23
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xe8759ae7
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
; end function sendSubmitMsgBetParity
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	sendSubmitMsgBetParity_internal
.type	sendSubmitMsgBetParity_internal, @function
; modifier accept
ACCEPT
; function sendSubmitMsgBetParity
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x557301e9
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; isEven
;; push identifier m_numberBetParity
GETGLOB 23
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
TUPLE 2
SETGLOB 8
; end function sendSubmitMsgBetParity
; end modifier accept
GETGLOB 8
UNTUPLE 2

.globl	sendSubmitMsgBetColor
.public	sendSubmitMsgBetColor
.type	sendSubmitMsgBetColor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function sendSubmitMsgBetColor
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x149df0d8
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; isRed
;; push identifier m_numberBetColor
GETGLOB 21
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xf400bddf
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STSLICER
	PUSH S1
	STREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
; end function sendSubmitMsgBetColor
; end modifier accept
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	sendSubmitMsgBetColor_internal
.type	sendSubmitMsgBetColor_internal, @function
; modifier accept
ACCEPT
; function sendSubmitMsgBetColor
;; ret param: dest
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: body
NEWC
ENDC
; expValue
; end expValue
;; push identifier m_target
GETGLOB 13
; colValue
POP S2
; end colValue
NEWC
STSLICECONST x149df0d8
;; value
;; push identifier m_BetValue
GETGLOB 24
STUR 128
;; isRed
;; push identifier m_numberBetColor
GETGLOB 21
STUR 8
ENDC
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
TUPLE 2
SETGLOB 8
; end function sendSubmitMsgBetColor
; end modifier accept
GETGLOB 8
UNTUPLE 2

.globl	enterBet
.public	enterBet
.type	enterBet, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode numb
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: numb
; modifier accept
ACCEPT
; function enterBet
; expValue
; end expValue
;; push identifier numb
DUP
; colValue
SETGLOB 24
; end colValue
; end function enterBet
DROP
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	enterBet_internal
.type	enterBet_internal, @function
;; param: numb
; modifier accept
ACCEPT
; function enterBet
; expValue
; end expValue
;; push identifier numb
DUP
; colValue
SETGLOB 24
; end colValue
; end function enterBet
DROP
; end modifier accept

.globl	getVersion
.public	getVersion
.type	getVersion, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function getVersion
;; ret param: name
NEWC
ENDC
;; ret param: semver
PUSHINT 0
; expValue
; end expValue
PUSHSLICE x436173696e6f204465426f74
NEWC
STSLICE
ENDC
; colValue
POP S2
; end colValue
; expValue
; end expValue
PUSHINT 256
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xb541576f
	PUSH S2
	STREFR
	PUSH S1
	STUR 24
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STREFR
	PUSH S1
	STUR 24
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
; end function getVersion
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	getVersion_internal
.type	getVersion_internal, @function
; modifier accept
ACCEPT
; function getVersion
;; ret param: name
NEWC
ENDC
;; ret param: semver
PUSHINT 0
; expValue
; end expValue
PUSHSLICE x436173696e6f204465426f74
NEWC
STSLICE
ENDC
; colValue
POP S2
; end colValue
; expValue
; end expValue
PUSHINT 256
; colValue
NIP
; end colValue
;; returning named params
TUPLE 2
SETGLOB 8
; end function getVersion
; end modifier accept
GETGLOB 8
UNTUPLE 2

.globl	start
.public	start
.type	start, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function start
; end function start
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	start_internal
.type	start_internal, @function
; modifier accept
ACCEPT
; function start
; end function start
; end modifier accept

.globl	quit
.public	quit
.type	quit, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; modifier accept
ACCEPT
; function quit
; end function quit
; end modifier accept
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	quit_internal
.type	quit_internal, @function
; modifier accept
ACCEPT
; function quit
; end function quit
; end modifier accept

.globl	getErrorDescription
.public	getErrorDescription
.type	getErrorDescription, @function
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
; Decode error
LDU 32
ENDS
;; param: error
; function getErrorDescription
;; ret param: desc
NEWC
ENDC
PUSHCONT {
	;; if
	FALSE ; decl return flag
	;; push identifier error
	PUSH S2
	PUSHINT 1001
	;; ==
	EQUAL
	PUSHCONT {
		;; return
		BLKDROP 3
		PUSHSLICE x726563697069656e7420616464726573732063616e2774206265207a65726f
		NEWC
		STSLICE
		ENDC
		PUSHINT 4
		RET
	}
	PUSHCONT {
		;; if
		FALSE ; decl return flag
		;; push identifier error
		PUSH S3
		PUSHINT 1002
		;; ==
		EQUAL
		PUSHCONT {
			;; return
			BLKDROP 4
			PUSHSLICE x616d6f756e74206d7573742062652067726561746572206f7220657175616c207468616e20302e30303120746f6e73
			NEWC
			STSLICE
			ENDC
			PUSHINT 4
			RET
		}
		PUSHCONT {
			;; if
			FALSE ; decl return flag
			;; push identifier error
			PUSH S4
			PUSHINT 1003
			;; ==
			EQUAL
			PUSHCONT {
				;; return
				BLKDROP 5
				PUSHSLICE x637573746f6469616e20636f756e74206d757374206265206c657373207468616e203332
				NEWC
				STSLICE
				ENDC
				PUSHINT 4
				RET
			}
			PUSHCONT {
				;; if
				FALSE ; decl return flag
				;; push identifier error
				PUSH S5
				PUSHINT 1004
				;; ==
				EQUAL
				PUSHCONT {
					;; return
					BLKDROP 6
					PUSHSLICE x6e756d626572206f6620636f6e6669726d6174696f6e73206d757374206265206c657373207468616e206e756d626572206f6620637573746f6469616e73
					NEWC
					STSLICE
					ENDC
					PUSHINT 4
					RET
				}
				PUSHCONT {
					;; if
					;; push identifier error
					PUSH S5
					PUSHINT 1005
					;; ==
					EQUAL
					PUSHCONT {
						;; return
						BLKDROP 6
						PUSHSLICE x616d6f756e7420697320626967676572207468616e2077616c6c65742062616c616e6365
						NEWC
						STSLICE
						ENDC
						PUSHINT 4
						RET
					}
					IFJMP
					;; end if
				}
				IFELSE
				DUP
				IFRET
				DROP
				;; end if
			}
			IFELSE
			DUP
			IFRET
			DROP
			;; end if
		}
		IFELSE
		DUP
		IFRET
		DROP
		;; end if
	}
	IFELSE
	EQINT 4
	IFRET
	;; end if
	;; return
	DROP2
	PUSHSLICE x756e6b6e6f776e20657863657074696f6e
	NEWC
	STSLICE
	ENDC
}
CALLX
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xcabea99b
	PUSH S1
	STREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
; end function getErrorDescription
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getErrorDescription_internal
.type	getErrorDescription_internal, @function
;; param: error
; function getErrorDescription
;; ret param: desc
NEWC
ENDC
;; if
FALSE ; decl return flag
;; push identifier error
PUSH S2
PUSHINT 1001
;; ==
EQUAL
PUSHCONT {
	;; return
	BLKDROP 3
	PUSHSLICE x726563697069656e7420616464726573732063616e2774206265207a65726f
	NEWC
	STSLICE
	ENDC
	PUSHINT 4
	RET
}
PUSHCONT {
	;; if
	FALSE ; decl return flag
	;; push identifier error
	PUSH S3
	PUSHINT 1002
	;; ==
	EQUAL
	PUSHCONT {
		;; return
		BLKDROP 4
		PUSHSLICE x616d6f756e74206d7573742062652067726561746572206f7220657175616c207468616e20302e30303120746f6e73
		NEWC
		STSLICE
		ENDC
		PUSHINT 4
		RET
	}
	PUSHCONT {
		;; if
		FALSE ; decl return flag
		;; push identifier error
		PUSH S4
		PUSHINT 1003
		;; ==
		EQUAL
		PUSHCONT {
			;; return
			BLKDROP 5
			PUSHSLICE x637573746f6469616e20636f756e74206d757374206265206c657373207468616e203332
			NEWC
			STSLICE
			ENDC
			PUSHINT 4
			RET
		}
		PUSHCONT {
			;; if
			FALSE ; decl return flag
			;; push identifier error
			PUSH S5
			PUSHINT 1004
			;; ==
			EQUAL
			PUSHCONT {
				;; return
				BLKDROP 6
				PUSHSLICE x6e756d626572206f6620636f6e6669726d6174696f6e73206d757374206265206c657373207468616e206e756d626572206f6620637573746f6469616e73
				NEWC
				STSLICE
				ENDC
				PUSHINT 4
				RET
			}
			PUSHCONT {
				;; if
				;; push identifier error
				PUSH S5
				PUSHINT 1005
				;; ==
				EQUAL
				PUSHCONT {
					;; return
					BLKDROP 6
					PUSHSLICE x616d6f756e7420697320626967676572207468616e2077616c6c65742062616c616e6365
					NEWC
					STSLICE
					ENDC
					PUSHINT 4
					RET
				}
				IFJMP
				;; end if
			}
			IFELSE
			DUP
			IFRET
			DROP
			;; end if
		}
		IFELSE
		DUP
		IFRET
		DROP
		;; end if
	}
	IFELSE
	DUP
	IFRET
	DROP
	;; end if
}
IFELSE
EQINT 4
IFRET
;; end if
;; return
DROP2
PUSHSLICE x756e6b6e6f776e20657863657074696f6e
NEWC
STSLICE
ENDC
; end function getErrorDescription

.globl	init_internal
.type	init_internal, @function
;; param: options
;; param: debotAbi
;; param: targetAbi
;; param: targetAddr
; function init
;; if
;; push identifier options
PUSH S3
PUSHINT 1
;; &
AND
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier debotAbi
	PUSH S2
	; colValue
	SETGLOB 11
	; end colValue
}
IF
;; end if
;; if
;; push identifier options
PUSH S3
PUSHINT 2
;; &
AND
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier targetAbi
	PUSH S1
	; colValue
	SETGLOB 12
	; end colValue
}
IF
;; end if
;; if
;; push identifier options
PUSH S3
PUSHINT 4
;; &
AND
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier targetAddr
	DUP
	; colValue
	SETGLOB 13
	; end colValue
}
IF
;; end if
; expValue
; end expValue
;; push identifier options
PUSH S3
; colValue
SETGLOB 10
; end colValue
BLKDROP 4
; end function init

.globl	getDebotOptions
.public	getDebotOptions
.type	getDebotOptions, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
PUSH S1
PUSHCONT {
	LDU 32
	GETGLOB 4
	ROT
	SETINDEXQ 5
	SETGLOB 4
}
IFNOT
; Decode input parameters
ENDS
; function getDebotOptions
;; ret param: options
PUSHINT 0
;; ret param: debotAbi
NEWC
ENDC
;; ret param: targetAbi
NEWC
ENDC
;; ret param: targetAddr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; push identifier m_debotAbi
GETGLOB 11
ISNULL
NOT
PUSHCONT {
	;; push identifier m_debotAbi
	GETGLOB 11
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S3
; end colValue
;; push identifier m_targetAbi
GETGLOB 12
ISNULL
NOT
PUSHCONT {
	;; push identifier m_targetAbi
	GETGLOB 12
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; push identifier m_target
GETGLOB 13
ISNULL
NOT
PUSHCONT {
	;; push identifier m_target
	GETGLOB 13
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
}
IFELSE
; expValue
; end expValue
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier m_options
GETGLOB 10
; colValue
POP S4
; end colValue
;; returning named params
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xfdecd0db
	PUSH S4
	STUR 8
	PUSH S3
	STREFR
	PUSH S2
	STREFR
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S4
	STUR 8
	PUSH S3
	STREFR
	PUSH S2
	STREFR
	PUSH S1
	STSLICER
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
BLKDROP 4
; end function getDebotOptions
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getDebotOptions_internal
.type	getDebotOptions_internal, @function
; function getDebotOptions
;; ret param: options
PUSHINT 0
;; ret param: debotAbi
NEWC
ENDC
;; ret param: targetAbi
NEWC
ENDC
;; ret param: targetAddr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; push identifier m_debotAbi
GETGLOB 11
ISNULL
NOT
PUSHCONT {
	;; push identifier m_debotAbi
	GETGLOB 11
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S3
; end colValue
;; push identifier m_targetAbi
GETGLOB 12
ISNULL
NOT
PUSHCONT {
	;; push identifier m_targetAbi
	GETGLOB 12
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; push identifier m_target
GETGLOB 13
ISNULL
NOT
PUSHCONT {
	;; push identifier m_target
	GETGLOB 13
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
}
IFELSE
; expValue
; end expValue
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier m_options
GETGLOB 10
; colValue
POP S4
; end colValue
;; returning named params
; end function getDebotOptions

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 15
GETGLOB 16
GETGLOB 17
GETGLOB 18
GETGLOB 19
GETGLOB 20
GETGLOB 21
GETGLOB 22
GETGLOB 23
GETGLOB 24
GETGLOB 14
REVERSE 16, 0
STU 8
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	STSLICE
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
STSLICE
STU 8
STU 128
STU 8
STU 8
STU 8
STU 8
STU 8
STU 8
STU 128
STREF
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDU 8
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SETGLOB 11
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SETGLOB 12
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	LDMSGADDR
	DROP
}
IFNOT
SETGLOB 13
LDMSGADDR
LDU 8
LDU 128
LDU 8
LDU 8
LDU 8
LDU 8
LDU 8
LDU 8
LDU 128
PLDREF
SETGLOB 14
SETGLOB 24
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDU 8
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDREF
	}
	IFNOT
	SETGLOB 11
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDREF
	}
	IFNOT
	SETGLOB 12
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		LDMSGADDR
		DROP
	}
	IFNOT
	SETGLOB 13
	LDMSGADDR
	LDU 8
	LDU 128
	LDU 8
	LDU 8
	LDU 8
	LDU 8
	LDU 8
	LDU 8
	LDU 128
	PLDREF
	SETGLOB 14
	SETGLOB 24
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init m_casino
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 15
	; init m_lastCode
	PUSHINT 0
	SETGLOB 16
	; init m_lastComment
	PUSHINT 0
	SETGLOB 17
	; init m_numberBetSing
	PUSHINT 0
	SETGLOB 18
	; init m_numberBetDozen
	PUSHINT 0
	SETGLOB 19
	; init m_numberBetColumn
	PUSHINT 0
	SETGLOB 20
	; init m_numberBetColor
	PUSHINT 0
	SETGLOB 21
	; init m_numberBetGS
	PUSHINT 0
	SETGLOB 22
	; init m_numberBetParity
	PUSHINT 0
	SETGLOB 23
	; init m_BetValue
	PUSHINT 0
	SETGLOB 24
	; init m_options
	PUSHINT 0
	SETGLOB 10
	; init m_debotAbi
	NULL
	SETGLOB 11
	; init m_targetAbi
	NULL
	SETGLOB 12
	; init m_target
	NULL
	SETGLOB 13
	; init empty
	NEWC
	ENDC
	SETGLOB 14
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 1
SETINDEXQ 4
SETGLOB 4
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.globl	m_lastCode
.public	m_lastCode
.type	m_lastCode, @function
CALL $c4_to_c7$
GETGLOB 16
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xb90bafd1
PUSH S1
STUR 8
ENDC
PUSHINT 1
SENDRAWMSG
TRUE
SETGLOB 7

.globl	m_lastComment
.public	m_lastComment
.type	m_lastComment, @function
CALL $c4_to_c7$
GETGLOB 17
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xfd277245
PUSH S1
STUR 128
ENDC
PUSHINT 1
SENDRAWMSG
TRUE
SETGLOB 7

